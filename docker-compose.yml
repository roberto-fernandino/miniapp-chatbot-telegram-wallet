services:
  telegram_app:
    build:
      context: .
      dockerfile: Dockerfile.telegram_app
    networks:
      - app-network
    ports:
      - "5173:5173"
    env_file:
      - .env
    container_name: telegram_app

  # ngrok:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.ngrok
  #   volumes:
  #     - ./scripts/ngrok:/usr/bin/ngrok
  #   depends_on:
  #     - telegram_app
  #   networks:
  #     - app-network
  #   container_name: ngrok

  redis:
    image: redis:latest
    container_name: telegram_app_redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - app-network

  backend_app:
    build:
      context: .
      dockerfile: Dockerfile.backend_app
    networks:
      - app-network
    ports:
      - "8000:8000"
    env_file:
      - .env
    container_name: backend_app

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - telegram_app
      - backend_app
    networks:
      - app-network
    container_name: nginx_proxy

  solana_app:
    build:
      context: .
      dockerfile: Dockerfile.solana_app
    env_file:
      - .env
    networks:
      - app-network
    container_name: solana_app
    depends_on:
      - backend_app
    ports:
      # http
      - "3030:3030"
      # websocket
      - "4040:4040"

  telegram_bot:
    build:
      context: .
      dockerfile: Dockerfile.telegram_bot
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    networks:
      - app-network
    container_name: telegram_bot
    ports:
      - "2020:2020"
    depends_on:
      - telegram_app
      - solana_app
      - backend_app

  db-master:
    image: postgres
    restart: always
    ports:
      - target: 5432
        published: 5434
        mode: host
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    volumes:
      - ./master:/var/lib/postgresql/data
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          size: 134217728 # 128MB
    container_name: psql_miniapp
    networks:
      - app-network

volumes:
  redis-data:
  sqlite-data:

networks:
  app-network:
    driver: bridge
